This directory is dedicated to regression and other forms of testing. Some of
the files here:

cert.crt - a sample X509 certificate (1024bit RSA) which can be used for encryption
cert.key - cert.crt's private key
For both use openssl to examine. e.g. - openssl x509 -in cert.crt -noout -text

gzip - a shell script for nullifying the compression part of the process.
Sometimes, for debugging purposes, it is more convinent to not compress the file
prior to it's encryption. This is especially useful when it is desired to compare
the image right before encryption with the image right after decryption.

To disable compression, use the "gzip" option to specify "tests/gzip". This will make the
gzip in "tests" override the system wide gzip. This gzip is a simple pass through.

reg? - plain text files that have caused problems in the past.
reg?.key - the key files with which they caused problems.
reg?.enc - the resulting encryption file as it should be.
Note that rsyncrypto, at the moment, uses an RSA padding algorithm that contains
a random elemnt. As a result, two encryptions of the same file will result in
differences in cyphertext file in the first few bytes (132 for a 1024bit
asymetric key). The true way to test whether things work is to try and decrypt
the file into, say, reg1.dec, and do "diff reg1 reg1.dec".

testcrypt - an exercising program. Creates increasingly big files out of
/dev/urandom, and then encrypts them, decrypts them, and compares the before
and after. Will halt on error.

Please note, however, that testcrypt will not generate brand new files each time.
It will only append X bytes to the existing file. How many bytes are appended each
time is determined by the second parameter to testcrypt. The first parameter tells
testcrypt how many iterations to make.
